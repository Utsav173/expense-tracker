{
  "info": {
    "_postman_id": "your-postman-id",
    "name": "Expense Manager API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "A comprehensive collection of requests for the Expense Manager API. Includes endpoints for authentication, category management, accounts, transactions, budgets, goals, investments, and debts."
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:1337",
      "type": "string",
      "description": "Base URL for the API"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string",
      "description": "Authentication token"
    }
  ],
  "item": [
    {
      "name": "User Auth",
      "description": "Endpoints for user authentication and user data management",
      "item": [
        {
          "name": "Sign Up",
          "description": "Register a new user account. Accepts user details such as name, email, and password.",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "Test User",
                  "type": "text",
                  "description": "User's full name"
                },
                {
                  "key": "email",
                  "value": "test1@example.com",
                  "description": "User's valid email address",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "Strongpass@1",
                  "description": "User's password. Must be at least 8 characters long.",
                  "type": "text"
                },
                {
                  "key": "profilePic",
                  "type": "file",
                  "description": "User's profile picture. Accepts formats such as JPG, JPEG, PNG and GIF",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/auth/signup",
              "description": "Endpoint to register a new user account.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "signup"]
            }
          },
          "response": []
        },
        {
          "name": "Log In",
          "description": "Log in user with email and password. Returns a JWT token.",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\":\"test1@example.com\",\n    \"password\":\"Strongpass@1\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "description": "Endpoint to log in an existing user.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "description": "Request a password reset link via email.",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"test1@example.com\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot-password",
              "description": "Endpoint to request password reset link for the user.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot-password"]
            }
          },
          "response": []
        },
        {
          "name": "Reset Password",
          "description": "Reset user password using reset password token.",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"password\": \"newpass\",\n     \"resetPasswordToken\":\"valid-token\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/reset-password",
              "description": "Endpoint to reset the user password",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "reset-password"]
            }
          },
          "response": []
        },
        {
          "name": "Get Me",
          "description": "Fetch data of logged in user.",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "description": "Endpoint to fetch data of logged in user",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          },
          "response": []
        },
        {
          "name": "Update User Preference",
          "description": "Update user name and prefered currency.",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"test update\",  \"preferredCurrency\":\"EUR\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/update",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "update"]
            }
          },
          "response": []
        },
        {
          "name": "Update User Preference only Currency",
          "description": "Update user's preferred currency.",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"preferredCurrency\":\"INR\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/preferences",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "preferences"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Preference",
          "description": "Fetch user's currency preference",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/preferences",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "preferences"]
            }
          },
          "response": []
        },
        {
          "name": "Log out",
          "description": "Log out the current logged in user",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "description": "Endpoint to log out an user by invalidating the token.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Category",
      "description": "Endpoints to manage transaction categories.",
      "item": [
        {
          "name": "Create Category",
          "description": "Create a new transaction category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Groceries\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/category",
              "description": "Endpoint to create a new transaction category.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["category"]
            }
          },
          "response": []
        },
        {
          "name": "Update Category",
          "description": "Update an existing transaction category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Shopping\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/category/valid-uuid-of-category",
              "description": "Endpoint to update an existing transaction category.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["category", "valid-uuid-of-category"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Category (pagination included)",
          "description": "Fetch a list of all transaction categories with pagination, search, and sort.",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/category?page=1&limit=5&search=test&sortBy=createdAt&sortOrder=asc",
              "description": "Endpoint to fetch all transaction categories",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["category"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "integer: current page number"
                },
                {
                  "key": "limit",
                  "value": "5",
                  "description": "integer: number of item per page"
                },
                {
                  "key": "search",
                  "value": "test",
                  "description": "String: Search by Category names "
                },
                {
                  "key": "sortBy",
                  "value": "createdAt",
                  "description": "string, which fields you want to sortBy: (name, createdAt, id) can be default"
                },
                {
                  "key": "sortOrder",
                  "value": "asc",
                  "description": "string: type (desc,asc) if nothing provided, sort order DESC"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Category",
          "description": "Delete a transaction category using it's Id",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/category/valid-uuid-of-category",
              "description": "Endpoint to delete an existing transaction category.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["category", "valid-uuid-of-category"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Accounts",
      "description": "Endpoints to manage user accounts.",
      "item": [
        {
          "name": "Create Account",
          "description": "Create a new financial account for the user.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\":\"Main\",\n    \"balance\":100,\n    \"currency\":\"USD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/accounts",
              "description": "Endpoint to create new financial account",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["accounts"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Accounts",
          "description": "Fetch a list of all accounts for the logged in user with pagination and search filters.",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts?page=1&limit=5&search=test&sortBy=createdAt&sortOrder=asc",
              "description": "Endpoint to fetch list of all account",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["accounts"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "integer: current page number"
                },
                {
                  "key": "limit",
                  "value": "5",
                  "description": "integer: items per page number"
                },
                {
                  "key": "search",
                  "value": "test",
                  "description": "string: searches by account names, or balance"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt",
                  "description": "string, fields to sort, possible values are (id,name, createdAt,balance)"
                },
                {
                  "key": "sortOrder",
                  "value": "asc",
                  "description": "String :type(asc,desc) or leave empty, for DESC by default"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update account currency",
          "description": "Update existing account's currency, name and balance",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\":\"Saving Account Updated\",\n   \"balance\":2000,\n  \"currency\":\"EUR\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/accounts/valid-uuid-of-account",
              "description": "Endpoint to update existing account data",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["accounts", "valid-uuid-of-account"]
            }
          },
          "response": []
        },
        {
          "name": "Get all account for dropdown (no pagination)",
          "description": "Fetch all the user accounts for dropdown usage",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts/list",
              "description": "Endpoint to fetch all account for dropdown selection",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["accounts", "list"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Transactions",
      "description": "Endpoints to manage financial transactions",
      "item": [
        {
          "name": "Create Transactions",
          "description": "Create a new financial transaction. It also support recurring transaction based on recurrenceType, and recurrenceEndDate.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"text\":\"Groceries from Market\",\n     \"amount\":50,\n     \"isIncome\":false,\n  \"transfer\":\"Self\",\n \"category\":\"valid-uuid-of-category\",\n   \"account\":\"valid-uuid-of-account\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/transactions",
              "description": "Endpoint to create new transaction",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["transactions"]
            }
          },
          "response": []
        },
        {
          "name": "Get all Transaction of account  (pagination included)",
          "description": "Fetch all the transaction for user with filters.",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions?accountId=valid-uuid-of-account&duration=thisMonth&page=1&pageSize=10&q=market",
              "description": "Endpoint to get all the transactions for a user with pagination and various filters.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["transactions"],
              "query": [
                {
                  "key": "accountId",
                  "value": "valid-uuid-of-account",
                  "description": "string, Id of the existing account"
                },
                {
                  "key": "duration",
                  "value": "thisMonth",
                  "description": "string : (thisMonth,thisWeek, today or thisYear)"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "number : curent Page"
                },
                {
                  "key": "pageSize",
                  "value": "10",
                  "description": "number, numbers of records on single page"
                },
                {
                  "key": "q",
                  "value": "market",
                  "description": "string : query term, by description ,or category, transfer text or amount "
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get all Recurring Transaction for user (pagination)",
          "description": "Fetch all the recurring transactions for logged in user with pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions/recurring?page=1&pageSize=10",
              "description": "Endpoint to fetch all the recurring transactions for a user with pagination",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["transactions", "recurring"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "string, page number for pagination"
                },
                {
                  "key": "pageSize",
                  "value": "10",
                  "description": "string, number of record per page."
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get recurring transaction details",
          "description": "Fetch details of specific recurring transactions with id",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions/recurring/valid-uuid-of-transaction",
              "description": "Endpoint to get detail of specific recurring transaction",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["transactions", "recurring", "valid-uuid-of-transaction"]
            }
          },
          "response": []
        },
        {
          "name": "Update recurring transaction",
          "description": "Update the existing recurring transaction.",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"text\":\"Groceries from Market\",\n     \"amount\":100,\n     \"isIncome\":false,\n  \"transfer\":\"Self\",\n \"category\":\"valid-uuid-of-category\",\n  \"recurring\":true,\n \"recurrenceType\":\"monthly\",\n    \"recurrenceEndDate\":\"2025-05-30T23:59:59.000Z\",\n   \"account\":\"valid-uuid-of-account\",\n \"currency\":\"USD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/transactions/recurring/valid-uuid-of-transaction",
              "description": "Endpoint to update an existing recurring transaction",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["transactions", "recurring", "valid-uuid-of-transaction"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Recurring Transaction",
          "description": "Delete an existing recurring transaction.",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions/recurring/valid-uuid-of-transaction",
              "description": "Endpoint to delete recurring transaction.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["transactions", "recurring", "valid-uuid-of-transaction"]
            }
          },
          "response": []
        },
        {
          "name": "Skip recurring transaction",
          "description": "Skip next occurance of recurring transaction by updating `recurrenceEndDate`",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions/recurring/valid-uuid-of-transaction/skip",
              "description": "Endpoint to Skip next occurance of a recurring transaction",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": [
                "transactions",
                "recurring",
                "valid-uuid-of-transaction",
                "skip"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Budget Routes",
      "description": "Endpoints to manage user's financial budgets",
      "item": [
        {
          "name": "Create budget",
          "description": "Create new budget for particular month, year, and category for a user",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"categoryId\":\"valid-uuid-of-category\",  \"month\":7,  \"year\":2024,  \"amount\":100 }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/budget",
              "description": "Endpoint to create a new user budget",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["budget"]
            }
          },
          "response": []
        },
        {
          "name": "Get All budget by userId (pagination included)",
          "description": "Fetch list of all user's budgets with pagination support",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/budget/all?page=1&limit=10",
              "description": "Endpoint to fetch all user's budget.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["budget", "all"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "integer, which page"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "integer : item on one page"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update budget by ID",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"amount\": 1000}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/budget/valid-uuid-of-budget",
              "description": "Endpoint to update existing budget record by id.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["budget", "valid-uuid-of-budget"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Budget",
          "description": "Delete an existing budget record with specific id.",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/budget/valid-uuid-of-budget",
              "description": "Endpoint to delete budget record using the id.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["budget", "valid-uuid-of-budget"]
            }
          },
          "response": []
        },
        {
          "name": "Get budget summary for month and year",
          "description": "Get a summary of budgets and actual spending for a given month and year",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/budget/summary?month=7&year=2024",
              "description": "Endpoint to get budget summary for specified month and year.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["budget", "summary"],
              "query": [
                {
                  "key": "month",
                  "value": "7",
                  "description": "integer, Month of year"
                },
                {
                  "key": "year",
                  "value": "2024",
                  "description": "integer, year number"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get progress of specific budget",
          "description": "Get the progress of specific budget for an user",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/budget/valid-uuid-of-budget/progress",
              "description": "Endpoint to get the progress of a specific budget.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["budget", "valid-uuid-of-budget", "progress"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Goal Routes",
      "description": "Endpoints to manage user's saving goals.",
      "item": [
        {
          "name": "Create New Goals",
          "description": "Create a new saving goal for a user.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"New Goal\",    \"targetAmount\":10000,  \"targetDate\":\"2025-12-30T23:59:59.000Z\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/goal",
              "description": "Endpoint to create new saving goals.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["goal"]
            }
          },
          "response": []
        },
        {
          "name": "Get All goal for user",
          "description": "Get all the saved goals for a user",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/goal/all?page=1&limit=10",
              "description": "Endpoint to get all the saved goals for an user",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["goal", "all"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "integer, current Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "integer, records per page "
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update existing goal",
          "description": "Update existing goal details.",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"targetAmount\":20000,  \"targetDate\":\"2025-12-30T23:59:59.000Z\", \"savedAmount\": 1000}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/goal/valid-uuid-of-goal",
              "description": "Endpoint to update an existing goal",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["goal", "valid-uuid-of-goal"]
            }
          },
          "response": []
        },
        {
          "name": "Add amount in the saving goals",
          "description": "Add amount to existing saving goals.",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"amount\": 1000 }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/goal/valid-uuid-of-goal/add-amount",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["goal", "valid-uuid-of-goal", "add-amount"]
            }
          },
          "response": []
        },
        {
          "name": "Withdraw Amount from saving goals",
          "description": "Withdraw the specified amount from existing saving goals.",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"amount\": 1000 }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/goal/valid-uuid-of-goal/withdraw-amount",
              "description": "Endpoint to withdraw amount from specific goal",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["goal", "valid-uuid-of-goal", "withdraw-amount"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Goal",
          "description": "Delete a particular goal using it's Id",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/goal/valid-uuid-of-goal",
              "description": "Endpoint to delete specific goal by it's Id.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["goal", "valid-uuid-of-goal"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Investment Account Routes",
      "description": "Endpoints to manage investment accounts.",
      "item": [
        {
          "name": "Create Investment Account",
          "description": "Create a new investment account for user",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Roth IRA\",\"platform\":\"fidelity\", \"currency\":\"USD\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/investmentAccount",
              "description": "Endpoint to create new investment account",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investmentAccount"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Investment Account(pagination included)",
          "description": "Fetch list of all investment accounts for the user",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investmentAccount/all?page=1&limit=5",
              "description": "Endpoint to fetch list of investment accounts with pagination",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investmentAccount", "all"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "string, page number to request"
                },
                {
                  "key": "limit",
                  "value": "5",
                  "description": "string, number of record on single page."
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update investment account by id",
          "description": "Update existing investment account details",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Roth IRA Updated\",  \"platform\":\"Schwab\" }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/investmentAccount/valid-uuid-of-investmentaccount",
              "description": "Endpoint to update existing investment account details",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investmentAccount", "valid-uuid-of-investmentaccount"]
            }
          },
          "response": []
        },
        {
          "name": "Delete existing Investment Account by Id",
          "description": "Delete existing investment account by it's Id",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investmentAccount/valid-uuid-of-investmentaccount",
              "description": "Endpoint to delete existing investment account using Id",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investmentAccount", "valid-uuid-of-investmentaccount"]
            }
          },
          "response": []
        },
        {
          "name": "Get Investment Account Details",
          "description": "Get all the details for an investment account",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investmentAccount/valid-uuid-of-investmentaccount",
              "description": "Endpoint to fetch details of specific investment account",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investmentAccount", "valid-uuid-of-investmentaccount"]
            }
          },
          "response": []
        },
        {
          "name": "Get investment account Summary",
          "description": "Fetch summary of an investment account by it's Id",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investmentAccount/valid-uuid-of-investmentaccount/summary",
              "description": "Endpoint to get the summary of investment account",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": [
                "investmentAccount",
                "valid-uuid-of-investmentaccount",
                "summary"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Investment Routes",
      "description": "Endpoints to manage user investments",
      "item": [
        {
          "name": "Create new Investments",
          "description": "Create new investments in an investment account",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"symbol\":\"TSLA\",   \"shares\": 10,    \"purchasePrice\":1000 ,  \"purchaseDate\":\"2024-05-30T23:59:59.000Z\",  \"investmentAccount\":\"valid-uuid-of-investmentaccount\"   }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/investment",
              "description": "Endpoint to create new investment",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investment"]
            }
          },
          "response": []
        },
        {
          "name": "Get Investment By account Id (pagination)",
          "description": "Fetch all the investments for an account",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investment/valid-uuid-of-investmentaccount?page=1&limit=10",
              "description": "Endpoint to fetch all investment for an account id.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investment", "valid-uuid-of-investmentaccount"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Integer,  Current Page"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Integer, item per Page number"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Existing investment by ID",
          "description": "Update details for existing investments",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"shares\":100,   \"purchasePrice\":1100,     \"purchaseDate\":\"2024-10-30T23:59:59.000Z\"   }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/investment/valid-uuid-of-investment",
              "description": "Endpoint to update existing investment by id",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investment", "valid-uuid-of-investment"]
            }
          },
          "response": []
        },
        {
          "name": "Update Investment Dividend",
          "description": "Update dividend for existing investment by id",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"dividend\": 1000 }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/investment/valid-uuid-of-investment/update-divident",
              "description": "Endpoint to update the dividend for specific investment.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": [
                "investment",
                "valid-uuid-of-investment",
                "update-divident"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Investment by id",
          "description": "Delete an investment record by its ID",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investment/valid-uuid-of-investment",
              "description": "Endpoint to delete existing investment.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investment", "valid-uuid-of-investment"]
            }
          },
          "response": []
        },
        {
          "name": "Get single investment details",
          "description": "Fetch detail of single investment",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investment/details/valid-uuid-of-investment",
              "description": "Endpoint to fetch detail of single investment.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investment", "details", "valid-uuid-of-investment"]
            }
          },
          "response": []
        },
        {
          "name": "Get investment portfolio",
          "description": "Fetch details for investment portfolio",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investment/portfolio",
              "description": "Endpoint to fetch investment portfolio.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investment", "portfolio"]
            }
          },
          "response": []
        },
        {
          "name": "Search Stock by Symbol",
          "description": "Search stock using symbol or name",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investment/stocks/search?q=TSLA",
              "description": "Endpoint to search stock by symbol",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investment", "stocks", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "TSLA",
                  "description": "string, stock symbol or name"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Stock Price by Symbol",
          "description": "Get latest stock price by it's symbol",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/investment/stocks/price/TSLA",
              "description": "Endpoint to get the latest price of a specific stock",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["investment", "stocks", "price", "TSLA"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Debt Routes",
      "description": "Endpoints to manage user's debts.",
      "item": [
        {
          "name": "Mark debt as paid",
          "description": "Mark particular debt as paid.",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text",
                "description": "Authorization token from login"
              }
            ],
            "url": {
              "raw": "{{base_url}}/interest/debts/valid-uuid-of-debt/mark-paid",
              "description": "Endpoint to mark particular debt as paid.",
              "variable": [
                {
                  "key": "base_url",
                  "value": "{{base_url}}"
                }
              ],
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["interest", "debts", "valid-uuid-of-debt", "mark-paid"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
